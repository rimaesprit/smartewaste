{% extends 'BackBase.html.twig' %}

{% block title %}Liste des signalements{% endblock %}

{% block body %}
<div class="page-header">
    <h4 class="page-title">Gestion des signalements</h4>
    <ul class="breadcrumbs">
        <li class="nav-home">
            <a href="{{ path('app_home') }}">
                <i class="fas fa-home"></i>
            </a>
        </li>
        <li class="separator">
            <i class="fas fa-angle-right"></i>
        </li>
        <li class="nav-item">
            <a href="#">Citoyens</a>
        </li>
        <li class="separator">
            <i class="fas fa-angle-right"></i>
        </li>
        <li class="nav-item">
            <a href="#">Signalements</a>
        </li>
    </ul>
    <div class="btn-group-page-header ms-auto">
        <a href="{{ path('app_signalement_new') }}" class="btn btn-success">
            <i class="fas fa-plus-circle me-1"></i> Nouveau signalement
        </a>
    </div>
</div>

{% for message in app.flashes('success') %}
    <div class="alert alert-success">
        {{ message }}
    </div>
{% endfor %}

<!-- Formulaire de recherche -->
<div class="card">
    <div class="card-header">
        <h4 class="card-title">Recherche de signalements</h4>
        <p class="card-category">Filtrez les signalements selon différents critères</p>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="searchQuery">Recherche</label>
                    <input type="text" class="form-control" id="searchQuery" placeholder="Adresse, description...">
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="searchType">Type</label>
                    <select class="form-control" id="searchType">
                        <option value="">Tous</option>
                        <option value="Incident">Incident</option>
                        <option value="Degradation">Dégradation</option>
                        <option value="Danger">Danger</option>
                        <option value="Other">Autre</option>
                    </select>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="searchZone">Zone</label>
                    <select class="form-control" id="searchZone">
                        <option value="">Toutes</option>
                        <option value="Downtown">Centre-ville</option>
                        <option value="North">Nord</option>
                        <option value="South">Sud</option>
                        <option value="East">Est</option>
                        <option value="West">Ouest</option>
                    </select>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="searchEtat">État</label>
                    <select class="form-control" id="searchEtat">
                        <option value="">Tous</option>
                        <option value="Pending">En attente</option>
                        <option value="In Progress">En cours</option>
                        <option value="Resolved">Résolu</option>
                        <option value="Rejected">Rejeté</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Période</label>
                    <div class="row">
                        <div class="col-md-6">
                            <input type="date" class="form-control" id="fromDate" placeholder="Du">
                        </div>
                        <div class="col-md-6">
                            <input type="date" class="form-control" id="toDate" placeholder="Au">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-md-12 text-right">
                <button type="button" id="searchButton" class="btn btn-primary">
                    <i class="fas fa-search me-1"></i> Rechercher
                </button>
                <button type="button" id="resetButton" class="btn btn-secondary">
                    <i class="fas fa-redo me-1"></i> Réinitialiser
                </button>
            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h4 class="card-title">Liste des signalements</h4>
    </div>
    <div class="card-body">
        <!-- Loader de chargement -->
        <div id="loader" class="text-center py-3" style="display: none;">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Chargement...</span>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Type</th>
                        <th>Zone</th>
                        <th>Adresse</th>
                        <th>Date</th>
                        <th>État</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="signalementsTableBody">
                    {% include 'signalement/_signalements_list.html.twig' with {'signalements': signalements} %}
                </tbody>
            </table>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchQuery = document.getElementById('searchQuery');
        const searchType = document.getElementById('searchType');
        const searchZone = document.getElementById('searchZone');
        const searchEtat = document.getElementById('searchEtat');
        const fromDate = document.getElementById('fromDate');
        const toDate = document.getElementById('toDate');
        const searchButton = document.getElementById('searchButton');
        const resetButton = document.getElementById('resetButton');
        const signalementsTableBody = document.getElementById('signalementsTableBody');
        const loader = document.getElementById('loader');
        
        // Fonction pour effectuer la recherche
        function performSearch() {
            // Afficher le loader
            loader.style.display = 'block';
            
            // Récupérer les valeurs des filtres
            const query = searchQuery.value.trim();
            const type = searchType.value;
            const zone = searchZone.value;
            const etat = searchEtat.value;
            const fromDateValue = fromDate.value;
            const toDateValue = toDate.value;
            
            // Construire l'URL avec les paramètres
            let url = "{{ path('app_signalement_search') }}?";
            const params = new URLSearchParams();
            
            if (query) params.append('query', query);
            if (type) params.append('type', type);
            if (zone) params.append('zone', zone);
            if (etat) params.append('etat', etat);
            if (fromDateValue) params.append('fromDate', fromDateValue);
            if (toDateValue) params.append('toDate', toDateValue);
            
            url += params.toString();
            
            // Effectuer la requête AJAX
            fetch(url, {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.text())
            .then(html => {
                // Cacher le loader
                loader.style.display = 'none';
                
                // Mettre à jour le tableau des résultats
                signalementsTableBody.innerHTML = html;
            })
            .catch(error => {
                console.error('Erreur lors de la recherche:', error);
                loader.style.display = 'none';
                // Afficher un message d'erreur
                signalementsTableBody.innerHTML = '<tr><td colspan="6" class="text-center text-danger">Une erreur est survenue lors de la recherche.</td></tr>';
            });
        }
        
        // Réinitialiser les filtres
        function resetFilters() {
            searchQuery.value = '';
            searchType.value = '';
            searchZone.value = '';
            searchEtat.value = '';
            fromDate.value = '';
            toDate.value = '';
            
            // Effectuer une recherche sans filtres
            performSearch();
        }
        
        // Événements
        searchButton.addEventListener('click', performSearch);
        resetButton.addEventListener('click', resetFilters);
        
        // Recherche lors de l'appui sur Entrée dans le champ de recherche
        searchQuery.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                performSearch();
            }
        });
    });
</script>
{% endblock %} 